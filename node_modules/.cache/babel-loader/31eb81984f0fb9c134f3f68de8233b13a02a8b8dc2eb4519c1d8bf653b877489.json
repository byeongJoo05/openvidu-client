{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/user/Desktop/openvidu-client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/user/Desktop/openvidu-client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/user/Desktop/openvidu-client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/user/Desktop/openvidu-client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/user/Desktop/openvidu-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/user/Desktop/openvidu-client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/user/Desktop/openvidu-client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\openvidu-client\\\\src\\\\App.js\";\nimport { OpenVidu } from 'openvidu-browser';\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport './App.css';\nimport UserVideoComponent from './UserVideoComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar APPLICATION_SERVER_URL = \"http://localhost:8080\";\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n  var _super = _createSuper(App);\n  function App(props) {\n    var _this;\n    _classCallCheck(this, App);\n    _this = _super.call(this, props);\n\n    // These properties are in the state's component in order to re-render the HTML whenever their values change\n    _this.state = {\n      mySessionId: 'SessionA',\n      myUserName: 'Participant' + Math.floor(Math.random() * 100),\n      session: undefined,\n      mainStreamManager: undefined,\n      // Main video of the page. Will be the 'publisher' or one of the 'subscribers'\n      publisher: undefined,\n      subscribers: []\n    };\n    _this.joinSession = _this.joinSession.bind(_assertThisInitialized(_this));\n    _this.leaveSession = _this.leaveSession.bind(_assertThisInitialized(_this));\n    _this.switchCamera = _this.switchCamera.bind(_assertThisInitialized(_this));\n    _this.handleChangeSessionId = _this.handleChangeSessionId.bind(_assertThisInitialized(_this));\n    _this.handleChangeUserName = _this.handleChangeUserName.bind(_assertThisInitialized(_this));\n    _this.handleMainVideoStream = _this.handleMainVideoStream.bind(_assertThisInitialized(_this));\n    _this.onbeforeunload = _this.onbeforeunload.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('beforeunload', this.onbeforeunload);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('beforeunload', this.onbeforeunload);\n    }\n  }, {\n    key: \"onbeforeunload\",\n    value: function onbeforeunload(event) {\n      this.leaveSession();\n    }\n  }, {\n    key: \"handleChangeSessionId\",\n    value: function handleChangeSessionId(e) {\n      this.setState({\n        mySessionId: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeUserName\",\n    value: function handleChangeUserName(e) {\n      this.setState({\n        myUserName: e.target.value\n      });\n    }\n  }, {\n    key: \"handleMainVideoStream\",\n    value: function handleMainVideoStream(stream) {\n      if (this.state.mainStreamManager !== stream) {\n        this.setState({\n          mainStreamManager: stream\n        });\n      }\n    }\n  }, {\n    key: \"deleteSubscriber\",\n    value: function deleteSubscriber(streamManager) {\n      var subscribers = this.state.subscribers;\n      var index = subscribers.indexOf(streamManager, 0);\n      if (index > -1) {\n        subscribers.splice(index, 1);\n        this.setState({\n          subscribers: subscribers\n        });\n      }\n    }\n  }, {\n    key: \"joinSession\",\n    value: function joinSession() {\n      var _this2 = this;\n      // --- 1) Get an OpenVidu object ---\n\n      this.OV = new OpenVidu();\n\n      // --- 2) Init a session ---\n\n      this.setState({\n        session: this.OV.initSession()\n      }, function () {\n        var mySession = _this2.state.session;\n\n        // --- 3) Specify the actions when events take place in the session ---\n\n        // On every new Stream received...\n        mySession.on('streamCreated', function (event) {\n          // Subscribe to the Stream to receive it. Second parameter is undefined\n          // so OpenVidu doesn't create an HTML video by its own\n          var subscriber = mySession.subscribe(event.stream, undefined);\n          var subscribers = _this2.state.subscribers;\n          subscribers.push(subscriber);\n\n          // Update the state with the new subscribers\n          _this2.setState({\n            subscribers: subscribers\n          });\n        });\n\n        // On every Stream destroyed...\n        mySession.on('streamDestroyed', function (event) {\n          // Remove the stream from 'subscribers' array\n          _this2.deleteSubscriber(event.stream.streamManager);\n        });\n\n        // On every asynchronous exception...\n        mySession.on('exception', function (exception) {\n          console.warn(exception);\n        });\n\n        // --- 4) Connect to the session with a valid user token ---\n\n        // Get a token from the OpenVidu deployment\n        _this2.getToken().then(function (token) {\n          // First param is the token got from the OpenVidu deployment. Second param can be retrieved by every user on event\n          // 'streamCreated' (property Stream.connection.data), and will be appended to DOM as the user's nickname\n          mySession.connect(token, {\n            clientData: _this2.state.myUserName\n          }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n            var publisher, devices, videoDevices, currentVideoDeviceId, currentVideoDevice;\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _this2.OV.initPublisherAsync(undefined, {\n                    audioSource: undefined,\n                    // The source of audio. If undefined default microphone\n                    videoSource: undefined,\n                    // The source of video. If undefined default webcam\n                    publishAudio: true,\n                    // Whether you want to start publishing with your audio unmuted or not\n                    publishVideo: true,\n                    // Whether you want to start publishing with your video enabled or not\n                    resolution: '640x480',\n                    // The resolution of your video\n                    frameRate: 30,\n                    // The frame rate of your video\n                    insertMode: 'APPEND',\n                    // How the video is inserted in the target element 'video-container'\n                    mirror: false // Whether to mirror your local video or not\n                  });\n                case 2:\n                  publisher = _context.sent;\n                  // --- 6) Publish your stream ---\n\n                  mySession.publish(publisher);\n\n                  // Obtain the current video device in use\n                  _context.next = 6;\n                  return _this2.OV.getDevices();\n                case 6:\n                  devices = _context.sent;\n                  videoDevices = devices.filter(function (device) {\n                    return device.kind === 'videoinput';\n                  });\n                  currentVideoDeviceId = publisher.stream.getMediaStream().getVideoTracks()[0].getSettings().deviceId;\n                  currentVideoDevice = videoDevices.find(function (device) {\n                    return device.deviceId === currentVideoDeviceId;\n                  }); // Set the main video in the page to display our webcam and store our Publisher\n                  _this2.setState({\n                    currentVideoDevice: currentVideoDevice,\n                    mainStreamManager: publisher,\n                    publisher: publisher\n                  });\n                case 11:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee);\n          }))).catch(function (error) {\n            console.log('There was an error connecting to the session:', error.code, error.message);\n          });\n        });\n      });\n    }\n  }, {\n    key: \"leaveSession\",\n    value: function leaveSession() {\n      // --- 7) Leave the session by calling 'disconnect' method over the Session object ---\n\n      var mySession = this.state.session;\n      if (mySession) {\n        mySession.disconnect();\n      }\n\n      // Empty all properties...\n      this.OV = null;\n      this.setState({\n        session: undefined,\n        subscribers: [],\n        mySessionId: 'SessionA',\n        myUserName: 'Participant' + Math.floor(Math.random() * 100),\n        mainStreamManager: undefined,\n        publisher: undefined\n      });\n    }\n  }, {\n    key: \"switchCamera\",\n    value: function () {\n      var _switchCamera = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _this3 = this;\n        var devices, videoDevices, newVideoDevice, newPublisher;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return this.OV.getDevices();\n            case 3:\n              devices = _context2.sent;\n              videoDevices = devices.filter(function (device) {\n                return device.kind === 'videoinput';\n              });\n              if (!(videoDevices && videoDevices.length > 1)) {\n                _context2.next = 14;\n                break;\n              }\n              newVideoDevice = videoDevices.filter(function (device) {\n                return device.deviceId !== _this3.state.currentVideoDevice.deviceId;\n              });\n              if (!(newVideoDevice.length > 0)) {\n                _context2.next = 14;\n                break;\n              }\n              // Creating a new publisher with specific videoSource\n              // In mobile devices the default and first camera is the front one\n              newPublisher = this.OV.initPublisher(undefined, {\n                videoSource: newVideoDevice[0].deviceId,\n                publishAudio: true,\n                publishVideo: true,\n                mirror: true\n              }); //newPublisher.once(\"accessAllowed\", () => {\n              _context2.next = 11;\n              return this.state.session.unpublish(this.state.mainStreamManager);\n            case 11:\n              _context2.next = 13;\n              return this.state.session.publish(newPublisher);\n            case 13:\n              this.setState({\n                currentVideoDevice: newVideoDevice[0],\n                mainStreamManager: newPublisher,\n                publisher: newPublisher\n              });\n            case 14:\n              _context2.next = 19;\n              break;\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(_context2.t0);\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 16]]);\n      }));\n      function switchCamera() {\n        return _switchCamera.apply(this, arguments);\n      }\n      return switchCamera;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      var mySessionId = this.state.mySessionId;\n      var myUserName = this.state.myUserName;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [this.state.session === undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"join\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"img-div\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"resources/images/openvidu_grey_bg_transp_cropped.png\",\n              alt: \"OpenVidu logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"join-dialog\",\n            className: \"jumbotron vertical-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \" Join a video session \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"form-group\",\n              onSubmit: this.joinSession,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Participant: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  type: \"text\",\n                  id: \"userName\",\n                  value: myUserName,\n                  onChange: this.handleChangeUserName,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Session: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  type: \"text\",\n                  id: \"sessionId\",\n                  value: mySessionId,\n                  onChange: this.handleChangeSessionId,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"btn btn-lg btn-success\",\n                  name: \"commit\",\n                  type: \"submit\",\n                  value: \"JOIN\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this) : null, this.state.session !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"session\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"session-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              id: \"session-title\",\n              children: mySessionId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"btn btn-large btn-danger\",\n              type: \"button\",\n              id: \"buttonLeaveSession\",\n              onClick: this.leaveSession,\n              value: \"Leave session\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), this.state.mainStreamManager !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"main-video\",\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(UserVideoComponent, {\n              streamManager: this.state.mainStreamManager\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"btn btn-large btn-success\",\n              type: \"button\",\n              id: \"buttonSwitchCamera\",\n              onClick: this.switchCamera,\n              value: \"Switch Camera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"video-container\",\n            className: \"col-md-6\",\n            children: [this.state.publisher !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stream-container col-md-6 col-xs-6\",\n              onClick: function onClick() {\n                return _this4.handleMainVideoStream(_this4.state.publisher);\n              },\n              children: /*#__PURE__*/_jsxDEV(UserVideoComponent, {\n                streamManager: this.state.publisher\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 33\n            }, this) : null, this.state.subscribers.map(function (sub, i) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stream-container col-md-6 col-xs-6\",\n                onClick: function onClick() {\n                  return _this4.handleMainVideoStream(sub);\n                },\n                children: /*#__PURE__*/_jsxDEV(UserVideoComponent, {\n                  streamManager: sub\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 37\n                }, _this4)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 33\n              }, _this4);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this);\n    }\n\n    /**\r\n     * --------------------------------------------\r\n     * GETTING A TOKEN FROM YOUR APPLICATION SERVER\r\n     * --------------------------------------------\r\n     * The methods below request the creation of a Session and a Token to\r\n     * your application server. This keeps your OpenVidu deployment secure.\r\n     * \r\n     * In this sample code, there is no user control at all. Anybody could\r\n     * access your application server endpoints! In a real production\r\n     * environment, your application server must identify the user to allow\r\n     * access to the endpoints.\r\n     * \r\n     * Visit https://docs.openvidu.io/en/stable/application-server to learn\r\n     * more about the integration of OpenVidu in your application server.\r\n     */\n  }, {\n    key: \"getToken\",\n    value: function () {\n      var _getToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var sessionId;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.createSession(this.state.mySessionId);\n            case 2:\n              sessionId = _context3.sent;\n              _context3.next = 5;\n              return this.createToken(sessionId);\n            case 5:\n              return _context3.abrupt(\"return\", _context3.sent);\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function getToken() {\n        return _getToken.apply(this, arguments);\n      }\n      return getToken;\n    }()\n  }, {\n    key: \"createSession\",\n    value: function () {\n      var _createSession = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(sessionId) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return axios.post(APPLICATION_SERVER_URL + 'api/sessions', {\n                customSessionId: sessionId\n              }, {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n            case 2:\n              response = _context4.sent;\n              return _context4.abrupt(\"return\", response.data);\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      function createSession(_x) {\n        return _createSession.apply(this, arguments);\n      }\n      return createSession;\n    }()\n  }, {\n    key: \"createToken\",\n    value: function () {\n      var _createToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(sessionId) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return axios.post(APPLICATION_SERVER_URL + 'api/sessions/' + sessionId + '/connections', {}, {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n            case 2:\n              response = _context5.sent;\n              return _context5.abrupt(\"return\", response.data);\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n      function createToken(_x2) {\n        return _createToken.apply(this, arguments);\n      }\n      return createToken;\n    }()\n  }]);\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"names":["OpenVidu","axios","React","Component","UserVideoComponent","APPLICATION_SERVER_URL","App","props","state","mySessionId","myUserName","Math","floor","random","session","undefined","mainStreamManager","publisher","subscribers","joinSession","bind","leaveSession","switchCamera","handleChangeSessionId","handleChangeUserName","handleMainVideoStream","onbeforeunload","window","addEventListener","removeEventListener","event","e","setState","target","value","stream","streamManager","index","indexOf","splice","OV","initSession","mySession","on","subscriber","subscribe","push","deleteSubscriber","exception","console","warn","getToken","then","token","connect","clientData","initPublisherAsync","audioSource","videoSource","publishAudio","publishVideo","resolution","frameRate","insertMode","mirror","publish","getDevices","devices","videoDevices","filter","device","kind","currentVideoDeviceId","getMediaStream","getVideoTracks","getSettings","deviceId","currentVideoDevice","find","catch","error","log","code","message","disconnect","length","newVideoDevice","newPublisher","initPublisher","unpublish","map","sub","i","createSession","sessionId","createToken","post","customSessionId","headers","response","data"],"sources":["C:/Users/user/Desktop/openvidu-client/src/App.js"],"sourcesContent":["import { OpenVidu } from 'openvidu-browser';\r\n\r\nimport axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport UserVideoComponent from './UserVideoComponent';\r\n\r\nconst APPLICATION_SERVER_URL = \"http://localhost:8080\";\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // These properties are in the state's component in order to re-render the HTML whenever their values change\r\n        this.state = {\r\n            mySessionId: 'SessionA',\r\n            myUserName: 'Participant' + Math.floor(Math.random() * 100),\r\n            session: undefined,\r\n            mainStreamManager: undefined,  // Main video of the page. Will be the 'publisher' or one of the 'subscribers'\r\n            publisher: undefined,\r\n            subscribers: [],\r\n        };\r\n\r\n        this.joinSession = this.joinSession.bind(this);\r\n        this.leaveSession = this.leaveSession.bind(this);\r\n        this.switchCamera = this.switchCamera.bind(this);\r\n        this.handleChangeSessionId = this.handleChangeSessionId.bind(this);\r\n        this.handleChangeUserName = this.handleChangeUserName.bind(this);\r\n        this.handleMainVideoStream = this.handleMainVideoStream.bind(this);\r\n        this.onbeforeunload = this.onbeforeunload.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('beforeunload', this.onbeforeunload);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('beforeunload', this.onbeforeunload);\r\n    }\r\n\r\n    onbeforeunload(event) {\r\n        this.leaveSession();\r\n    }\r\n\r\n    handleChangeSessionId(e) {\r\n        this.setState({\r\n            mySessionId: e.target.value,\r\n        });\r\n    }\r\n\r\n    handleChangeUserName(e) {\r\n        this.setState({\r\n            myUserName: e.target.value,\r\n        });\r\n    }\r\n\r\n    handleMainVideoStream(stream) {\r\n        if (this.state.mainStreamManager !== stream) {\r\n            this.setState({\r\n                mainStreamManager: stream\r\n            });\r\n        }\r\n    }\r\n\r\n    deleteSubscriber(streamManager) {\r\n        let subscribers = this.state.subscribers;\r\n        let index = subscribers.indexOf(streamManager, 0);\r\n        if (index > -1) {\r\n            subscribers.splice(index, 1);\r\n            this.setState({\r\n                subscribers: subscribers,\r\n            });\r\n        }\r\n    }\r\n\r\n    joinSession() {\r\n        // --- 1) Get an OpenVidu object ---\r\n\r\n        this.OV = new OpenVidu();\r\n\r\n        // --- 2) Init a session ---\r\n\r\n        this.setState(\r\n            {\r\n                session: this.OV.initSession(),\r\n            },\r\n            () => {\r\n                var mySession = this.state.session;\r\n\r\n                // --- 3) Specify the actions when events take place in the session ---\r\n\r\n                // On every new Stream received...\r\n                mySession.on('streamCreated', (event) => {\r\n                    // Subscribe to the Stream to receive it. Second parameter is undefined\r\n                    // so OpenVidu doesn't create an HTML video by its own\r\n                    var subscriber = mySession.subscribe(event.stream, undefined);\r\n                    var subscribers = this.state.subscribers;\r\n                    subscribers.push(subscriber);\r\n\r\n                    // Update the state with the new subscribers\r\n                    this.setState({\r\n                        subscribers: subscribers,\r\n                    });\r\n                });\r\n\r\n                // On every Stream destroyed...\r\n                mySession.on('streamDestroyed', (event) => {\r\n\r\n                    // Remove the stream from 'subscribers' array\r\n                    this.deleteSubscriber(event.stream.streamManager);\r\n                });\r\n\r\n                // On every asynchronous exception...\r\n                mySession.on('exception', (exception) => {\r\n                    console.warn(exception);\r\n                });\r\n\r\n                // --- 4) Connect to the session with a valid user token ---\r\n\r\n                // Get a token from the OpenVidu deployment\r\n                this.getToken().then((token) => {\r\n                    // First param is the token got from the OpenVidu deployment. Second param can be retrieved by every user on event\r\n                    // 'streamCreated' (property Stream.connection.data), and will be appended to DOM as the user's nickname\r\n                    mySession.connect(token, { clientData: this.state.myUserName })\r\n                        .then(async () => {\r\n\r\n                            // --- 5) Get your own camera stream ---\r\n\r\n                            // Init a publisher passing undefined as targetElement (we don't want OpenVidu to insert a video\r\n                            // element: we will manage it on our own) and with the desired properties\r\n                            let publisher = await this.OV.initPublisherAsync(undefined, {\r\n                                audioSource: undefined, // The source of audio. If undefined default microphone\r\n                                videoSource: undefined, // The source of video. If undefined default webcam\r\n                                publishAudio: true, // Whether you want to start publishing with your audio unmuted or not\r\n                                publishVideo: true, // Whether you want to start publishing with your video enabled or not\r\n                                resolution: '640x480', // The resolution of your video\r\n                                frameRate: 30, // The frame rate of your video\r\n                                insertMode: 'APPEND', // How the video is inserted in the target element 'video-container'\r\n                                mirror: false, // Whether to mirror your local video or not\r\n                            });\r\n\r\n                            // --- 6) Publish your stream ---\r\n\r\n                            mySession.publish(publisher);\r\n\r\n                            // Obtain the current video device in use\r\n                            var devices = await this.OV.getDevices();\r\n                            var videoDevices = devices.filter(device => device.kind === 'videoinput');\r\n                            var currentVideoDeviceId = publisher.stream.getMediaStream().getVideoTracks()[0].getSettings().deviceId;\r\n                            var currentVideoDevice = videoDevices.find(device => device.deviceId === currentVideoDeviceId);\r\n\r\n                            // Set the main video in the page to display our webcam and store our Publisher\r\n                            this.setState({\r\n                                currentVideoDevice: currentVideoDevice,\r\n                                mainStreamManager: publisher,\r\n                                publisher: publisher,\r\n                            });\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log('There was an error connecting to the session:', error.code, error.message);\r\n                        });\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    leaveSession() {\r\n\r\n        // --- 7) Leave the session by calling 'disconnect' method over the Session object ---\r\n\r\n        const mySession = this.state.session;\r\n\r\n        if (mySession) {\r\n            mySession.disconnect();\r\n        }\r\n\r\n        // Empty all properties...\r\n        this.OV = null;\r\n        this.setState({\r\n            session: undefined,\r\n            subscribers: [],\r\n            mySessionId: 'SessionA',\r\n            myUserName: 'Participant' + Math.floor(Math.random() * 100),\r\n            mainStreamManager: undefined,\r\n            publisher: undefined\r\n        });\r\n    }\r\n\r\n    async switchCamera() {\r\n        try {\r\n            const devices = await this.OV.getDevices()\r\n            var videoDevices = devices.filter(device => device.kind === 'videoinput');\r\n\r\n            if (videoDevices && videoDevices.length > 1) {\r\n\r\n                var newVideoDevice = videoDevices.filter(device => device.deviceId !== this.state.currentVideoDevice.deviceId)\r\n\r\n                if (newVideoDevice.length > 0) {\r\n                    // Creating a new publisher with specific videoSource\r\n                    // In mobile devices the default and first camera is the front one\r\n                    var newPublisher = this.OV.initPublisher(undefined, {\r\n                        videoSource: newVideoDevice[0].deviceId,\r\n                        publishAudio: true,\r\n                        publishVideo: true,\r\n                        mirror: true\r\n                    });\r\n\r\n                    //newPublisher.once(\"accessAllowed\", () => {\r\n                    await this.state.session.unpublish(this.state.mainStreamManager)\r\n\r\n                    await this.state.session.publish(newPublisher)\r\n                    this.setState({\r\n                        currentVideoDevice: newVideoDevice[0],\r\n                        mainStreamManager: newPublisher,\r\n                        publisher: newPublisher,\r\n                    });\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const mySessionId = this.state.mySessionId;\r\n        const myUserName = this.state.myUserName;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                {this.state.session === undefined ? (\r\n                    <div id=\"join\">\r\n                        <div id=\"img-div\">\r\n                            <img src=\"resources/images/openvidu_grey_bg_transp_cropped.png\" alt=\"OpenVidu logo\" />\r\n                        </div>\r\n                        <div id=\"join-dialog\" className=\"jumbotron vertical-center\">\r\n                            <h1> Join a video session </h1>\r\n                            <form className=\"form-group\" onSubmit={this.joinSession}>\r\n                                <p>\r\n                                    <label>Participant: </label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        id=\"userName\"\r\n                                        value={myUserName}\r\n                                        onChange={this.handleChangeUserName}\r\n                                        required\r\n                                    />\r\n                                </p>\r\n                                <p>\r\n                                    <label> Session: </label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        id=\"sessionId\"\r\n                                        value={mySessionId}\r\n                                        onChange={this.handleChangeSessionId}\r\n                                        required\r\n                                    />\r\n                                </p>\r\n                                <p className=\"text-center\">\r\n                                    <input className=\"btn btn-lg btn-success\" name=\"commit\" type=\"submit\" value=\"JOIN\" />\r\n                                </p>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n\r\n                {this.state.session !== undefined ? (\r\n                    <div id=\"session\">\r\n                        <div id=\"session-header\">\r\n                            <h1 id=\"session-title\">{mySessionId}</h1>\r\n                            <input\r\n                                className=\"btn btn-large btn-danger\"\r\n                                type=\"button\"\r\n                                id=\"buttonLeaveSession\"\r\n                                onClick={this.leaveSession}\r\n                                value=\"Leave session\"\r\n                            />\r\n                        </div>\r\n\r\n                        {this.state.mainStreamManager !== undefined ? (\r\n                            <div id=\"main-video\" className=\"col-md-6\">\r\n                                <UserVideoComponent streamManager={this.state.mainStreamManager} />\r\n                                <input\r\n                                    className=\"btn btn-large btn-success\"\r\n                                    type=\"button\"\r\n                                    id=\"buttonSwitchCamera\"\r\n                                    onClick={this.switchCamera}\r\n                                    value=\"Switch Camera\"\r\n                                />\r\n                            </div>\r\n                        ) : null}\r\n                        <div id=\"video-container\" className=\"col-md-6\">\r\n                            {this.state.publisher !== undefined ? (\r\n                                <div className=\"stream-container col-md-6 col-xs-6\" onClick={() => this.handleMainVideoStream(this.state.publisher)}>\r\n                                    <UserVideoComponent\r\n                                        streamManager={this.state.publisher} />\r\n                                </div>\r\n                            ) : null}\r\n                            {this.state.subscribers.map((sub, i) => (\r\n                                <div key={i} className=\"stream-container col-md-6 col-xs-6\" onClick={() => this.handleMainVideoStream(sub)}>\r\n                                    <UserVideoComponent streamManager={sub} />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    /**\r\n     * --------------------------------------------\r\n     * GETTING A TOKEN FROM YOUR APPLICATION SERVER\r\n     * --------------------------------------------\r\n     * The methods below request the creation of a Session and a Token to\r\n     * your application server. This keeps your OpenVidu deployment secure.\r\n     * \r\n     * In this sample code, there is no user control at all. Anybody could\r\n     * access your application server endpoints! In a real production\r\n     * environment, your application server must identify the user to allow\r\n     * access to the endpoints.\r\n     * \r\n     * Visit https://docs.openvidu.io/en/stable/application-server to learn\r\n     * more about the integration of OpenVidu in your application server.\r\n     */\r\n    async getToken() {\r\n        const sessionId = await this.createSession(this.state.mySessionId);\r\n        return await this.createToken(sessionId);\r\n    }\r\n\r\n    async createSession(sessionId) {\r\n        const response = await axios.post(APPLICATION_SERVER_URL + 'api/sessions', { customSessionId: sessionId }, {\r\n            headers: { 'Content-Type': 'application/json', },\r\n        });\r\n        return response.data; // The sessionId\r\n    }\r\n\r\n    async createToken(sessionId) {\r\n        const response = await axios.post(APPLICATION_SERVER_URL + 'api/sessions/' + sessionId + '/connections', {}, {\r\n            headers: { 'Content-Type': 'application/json', },\r\n        });\r\n        return response.data; // The token\r\n    }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}