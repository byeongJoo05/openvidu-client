{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/user/Desktop/openvidu-client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/user/Desktop/openvidu-client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"C:/Users/user/Desktop/openvidu-client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/user/Desktop/openvidu-client/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"C:/Users/user/Desktop/openvidu-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"C:/Users/user/Desktop/openvidu-client/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/user/Desktop/openvidu-client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import{OpenVidu}from'openvidu-browser';import axios from'axios';import React,{Component}from'react';import'./App.css';import UserVideoComponent from'./UserVideoComponent';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var APPLICATION_SERVER_URL=\"http://localhost:8080\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);// These properties are in the state's component in order to re-render the HTML whenever their values change\n_this.state={mySessionId:'SessionA',myUserName:'Participant'+Math.floor(Math.random()*100),session:undefined,mainStreamManager:undefined,// Main video of the page. Will be the 'publisher' or one of the 'subscribers'\npublisher:undefined,subscribers:[]};_this.joinSession=_this.joinSession.bind(_assertThisInitialized(_this));_this.leaveSession=_this.leaveSession.bind(_assertThisInitialized(_this));_this.switchCamera=_this.switchCamera.bind(_assertThisInitialized(_this));_this.handleChangeSessionId=_this.handleChangeSessionId.bind(_assertThisInitialized(_this));_this.handleChangeUserName=_this.handleChangeUserName.bind(_assertThisInitialized(_this));_this.handleMainVideoStream=_this.handleMainVideoStream.bind(_assertThisInitialized(_this));_this.onbeforeunload=_this.onbeforeunload.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){window.addEventListener('beforeunload',this.onbeforeunload);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.removeEventListener('beforeunload',this.onbeforeunload);}},{key:\"onbeforeunload\",value:function onbeforeunload(event){this.leaveSession();}},{key:\"handleChangeSessionId\",value:function handleChangeSessionId(e){this.setState({mySessionId:e.target.value});}},{key:\"handleChangeUserName\",value:function handleChangeUserName(e){this.setState({myUserName:e.target.value});}},{key:\"handleMainVideoStream\",value:function handleMainVideoStream(stream){if(this.state.mainStreamManager!==stream){this.setState({mainStreamManager:stream});}}},{key:\"deleteSubscriber\",value:function deleteSubscriber(streamManager){var subscribers=this.state.subscribers;var index=subscribers.indexOf(streamManager,0);if(index>-1){subscribers.splice(index,1);this.setState({subscribers:subscribers});}}},{key:\"joinSession\",value:function joinSession(){var _this2=this;// --- 1) Get an OpenVidu object ---\nthis.OV=new OpenVidu();// --- 2) Init a session ---\nthis.setState({session:this.OV.initSession()},function(){var mySession=_this2.state.session;// --- 3) Specify the actions when events take place in the session ---\n// On every new Stream received...\nmySession.on('streamCreated',function(event){// Subscribe to the Stream to receive it. Second parameter is undefined\n// so OpenVidu doesn't create an HTML video by its own\nvar subscriber=mySession.subscribe(event.stream,undefined);var subscribers=_this2.state.subscribers;subscribers.push(subscriber);// Update the state with the new subscribers\n_this2.setState({subscribers:subscribers});});// On every Stream destroyed...\nmySession.on('streamDestroyed',function(event){// Remove the stream from 'subscribers' array\n_this2.deleteSubscriber(event.stream.streamManager);});// On every asynchronous exception...\nmySession.on('exception',function(exception){console.warn(exception);});// --- 4) Connect to the session with a valid user token ---\n// Get a token from the OpenVidu deployment\n_this2.getToken().then(function(token){// First param is the token got from the OpenVidu deployment. Second param can be retrieved by every user on event\n// 'streamCreated' (property Stream.connection.data), and will be appended to DOM as the user's nickname\nmySession.connect(token,{clientData:_this2.state.myUserName}).then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var publisher,devices,videoDevices,currentVideoDeviceId,currentVideoDevice;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return _this2.OV.initPublisherAsync(undefined,{audioSource:undefined,// The source of audio. If undefined default microphone\nvideoSource:undefined,// The source of video. If undefined default webcam\npublishAudio:true,// Whether you want to start publishing with your audio unmuted or not\npublishVideo:true,// Whether you want to start publishing with your video enabled or not\nresolution:'640x480',// The resolution of your video\nframeRate:30,// The frame rate of your video\ninsertMode:'APPEND',// How the video is inserted in the target element 'video-container'\nmirror:false// Whether to mirror your local video or not\n});case 2:publisher=_context.sent;// --- 6) Publish your stream ---\nmySession.publish(publisher);// Obtain the current video device in use\n_context.next=6;return _this2.OV.getDevices();case 6:devices=_context.sent;videoDevices=devices.filter(function(device){return device.kind==='videoinput';});currentVideoDeviceId=publisher.stream.getMediaStream().getVideoTracks()[0].getSettings().deviceId;currentVideoDevice=videoDevices.find(function(device){return device.deviceId===currentVideoDeviceId;});// Set the main video in the page to display our webcam and store our Publisher\n_this2.setState({currentVideoDevice:currentVideoDevice,mainStreamManager:publisher,publisher:publisher});case 11:case\"end\":return _context.stop();}},_callee);}))).catch(function(error){console.log('There was an error connecting to the session:',error.code,error.message);});});});}},{key:\"leaveSession\",value:function leaveSession(){// --- 7) Leave the session by calling 'disconnect' method over the Session object ---\nvar mySession=this.state.session;if(mySession){mySession.disconnect();}// Empty all properties...\nthis.OV=null;this.setState({session:undefined,subscribers:[],mySessionId:'SessionA',myUserName:'Participant'+Math.floor(Math.random()*100),mainStreamManager:undefined,publisher:undefined});}},{key:\"switchCamera\",value:function(){var _switchCamera=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var _this3=this;var devices,videoDevices,newVideoDevice,newPublisher;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return this.OV.getDevices();case 3:devices=_context2.sent;videoDevices=devices.filter(function(device){return device.kind==='videoinput';});if(!(videoDevices&&videoDevices.length>1)){_context2.next=14;break;}newVideoDevice=videoDevices.filter(function(device){return device.deviceId!==_this3.state.currentVideoDevice.deviceId;});if(!(newVideoDevice.length>0)){_context2.next=14;break;}// Creating a new publisher with specific videoSource\n// In mobile devices the default and first camera is the front one\nnewPublisher=this.OV.initPublisher(undefined,{videoSource:newVideoDevice[0].deviceId,publishAudio:true,publishVideo:true,mirror:true});//newPublisher.once(\"accessAllowed\", () => {\n_context2.next=11;return this.state.session.unpublish(this.state.mainStreamManager);case 11:_context2.next=13;return this.state.session.publish(newPublisher);case 13:this.setState({currentVideoDevice:newVideoDevice[0],mainStreamManager:newPublisher,publisher:newPublisher});case 14:_context2.next=19;break;case 16:_context2.prev=16;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);case 19:case\"end\":return _context2.stop();}},_callee2,this,[[0,16]]);}));function switchCamera(){return _switchCamera.apply(this,arguments);}return switchCamera;}()},{key:\"render\",value:function render(){var _this4=this;var mySessionId=this.state.mySessionId;var myUserName=this.state.myUserName;return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[this.state.session===undefined?/*#__PURE__*/_jsxs(\"div\",{id:\"join\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"img-div\",children:/*#__PURE__*/_jsx(\"img\",{src:\"resources/images/openvidu_grey_bg_transp_cropped.png\",alt:\"OpenVidu logo\"})}),/*#__PURE__*/_jsxs(\"div\",{id:\"join-dialog\",className:\"jumbotron vertical-center\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\" Join a video session \"}),/*#__PURE__*/_jsxs(\"form\",{className:\"form-group\",onSubmit:this.joinSession,children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Participant: \"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"text\",id:\"userName\",value:myUserName,onChange:this.handleChangeUserName,required:true})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\" Session: \"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"text\",id:\"sessionId\",value:mySessionId,onChange:this.handleChangeSessionId,required:true})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"input\",{className:\"btn btn-lg btn-success\",name:\"commit\",type:\"submit\",value:\"JOIN\"})})]})]})]}):null,this.state.session!==undefined?/*#__PURE__*/_jsxs(\"div\",{id:\"session\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"session-header\",children:[/*#__PURE__*/_jsx(\"h1\",{id:\"session-title\",children:mySessionId}),/*#__PURE__*/_jsx(\"input\",{className:\"btn btn-large btn-danger\",type:\"button\",id:\"buttonLeaveSession\",onClick:this.leaveSession,value:\"Leave session\"})]}),this.state.mainStreamManager!==undefined?/*#__PURE__*/_jsxs(\"div\",{id:\"main-video\",className:\"col-md-6\",children:[/*#__PURE__*/_jsx(UserVideoComponent,{streamManager:this.state.mainStreamManager}),/*#__PURE__*/_jsx(\"input\",{className:\"btn btn-large btn-success\",type:\"button\",id:\"buttonSwitchCamera\",onClick:this.switchCamera,value:\"Switch Camera\"})]}):null,/*#__PURE__*/_jsxs(\"div\",{id:\"video-container\",className:\"col-md-6\",children:[this.state.publisher!==undefined?/*#__PURE__*/_jsx(\"div\",{className:\"stream-container col-md-6 col-xs-6\",onClick:function onClick(){return _this4.handleMainVideoStream(_this4.state.publisher);},children:/*#__PURE__*/_jsx(UserVideoComponent,{streamManager:this.state.publisher})}):null,this.state.subscribers.map(function(sub,i){return/*#__PURE__*/_jsx(\"div\",{className:\"stream-container col-md-6 col-xs-6\",onClick:function onClick(){return _this4.handleMainVideoStream(sub);},children:/*#__PURE__*/_jsx(UserVideoComponent,{streamManager:sub})},i);})]})]}):null]});}/**\r\n     * --------------------------------------------\r\n     * GETTING A TOKEN FROM YOUR APPLICATION SERVER\r\n     * --------------------------------------------\r\n     * The methods below request the creation of a Session and a Token to\r\n     * your application server. This keeps your OpenVidu deployment secure.\r\n     * \r\n     * In this sample code, there is no user control at all. Anybody could\r\n     * access your application server endpoints! In a real production\r\n     * environment, your application server must identify the user to allow\r\n     * access to the endpoints.\r\n     * \r\n     * Visit https://docs.openvidu.io/en/stable/application-server to learn\r\n     * more about the integration of OpenVidu in your application server.\r\n     */},{key:\"getToken\",value:function(){var _getToken=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var sessionId;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return this.createSession(this.state.mySessionId);case 2:sessionId=_context3.sent;_context3.next=5;return this.createToken(sessionId);case 5:return _context3.abrupt(\"return\",_context3.sent);case 6:case\"end\":return _context3.stop();}},_callee3,this);}));function getToken(){return _getToken.apply(this,arguments);}return getToken;}()},{key:\"createSession\",value:function(){var _createSession=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(sessionId){var response;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.next=2;return axios.post(APPLICATION_SERVER_URL+'api/sessions',{customSessionId:sessionId},{headers:{'Content-Type':'application/json'}});case 2:response=_context4.sent;return _context4.abrupt(\"return\",response.data);case 4:case\"end\":return _context4.stop();}},_callee4);}));function createSession(_x){return _createSession.apply(this,arguments);}return createSession;}()},{key:\"createToken\",value:function(){var _createToken=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(sessionId){var response;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.next=2;return axios.post(APPLICATION_SERVER_URL+'api/sessions/'+sessionId+'/connections',{},{headers:{'Content-Type':'application/json'}});case 2:response=_context5.sent;return _context5.abrupt(\"return\",response.data);case 4:case\"end\":return _context5.stop();}},_callee5);}));function createToken(_x2){return _createToken.apply(this,arguments);}return createToken;}()}]);return App;}(Component);export default App;","map":{"version":3,"names":["OpenVidu","axios","React","Component","UserVideoComponent","APPLICATION_SERVER_URL","App","props","state","mySessionId","myUserName","Math","floor","random","session","undefined","mainStreamManager","publisher","subscribers","joinSession","bind","leaveSession","switchCamera","handleChangeSessionId","handleChangeUserName","handleMainVideoStream","onbeforeunload","window","addEventListener","removeEventListener","event","e","setState","target","value","stream","streamManager","index","indexOf","splice","OV","initSession","mySession","on","subscriber","subscribe","push","deleteSubscriber","exception","console","warn","getToken","then","token","connect","clientData","initPublisherAsync","audioSource","videoSource","publishAudio","publishVideo","resolution","frameRate","insertMode","mirror","publish","getDevices","devices","videoDevices","filter","device","kind","currentVideoDeviceId","getMediaStream","getVideoTracks","getSettings","deviceId","currentVideoDevice","find","catch","error","log","code","message","disconnect","length","newVideoDevice","newPublisher","initPublisher","unpublish","map","sub","i","createSession","sessionId","createToken","post","customSessionId","headers","response","data"],"sources":["C:/Users/user/Desktop/openvidu-client/src/App.js"],"sourcesContent":["import { OpenVidu } from 'openvidu-browser';\r\n\r\nimport axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport UserVideoComponent from './UserVideoComponent';\r\n\r\nconst APPLICATION_SERVER_URL = \"http://localhost:8080\";\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // These properties are in the state's component in order to re-render the HTML whenever their values change\r\n        this.state = {\r\n            mySessionId: 'SessionA',\r\n            myUserName: 'Participant' + Math.floor(Math.random() * 100),\r\n            session: undefined,\r\n            mainStreamManager: undefined,  // Main video of the page. Will be the 'publisher' or one of the 'subscribers'\r\n            publisher: undefined,\r\n            subscribers: [],\r\n        };\r\n\r\n        this.joinSession = this.joinSession.bind(this);\r\n        this.leaveSession = this.leaveSession.bind(this);\r\n        this.switchCamera = this.switchCamera.bind(this);\r\n        this.handleChangeSessionId = this.handleChangeSessionId.bind(this);\r\n        this.handleChangeUserName = this.handleChangeUserName.bind(this);\r\n        this.handleMainVideoStream = this.handleMainVideoStream.bind(this);\r\n        this.onbeforeunload = this.onbeforeunload.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('beforeunload', this.onbeforeunload);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('beforeunload', this.onbeforeunload);\r\n    }\r\n\r\n    onbeforeunload(event) {\r\n        this.leaveSession();\r\n    }\r\n\r\n    handleChangeSessionId(e) {\r\n        this.setState({\r\n            mySessionId: e.target.value,\r\n        });\r\n    }\r\n\r\n    handleChangeUserName(e) {\r\n        this.setState({\r\n            myUserName: e.target.value,\r\n        });\r\n    }\r\n\r\n    handleMainVideoStream(stream) {\r\n        if (this.state.mainStreamManager !== stream) {\r\n            this.setState({\r\n                mainStreamManager: stream\r\n            });\r\n        }\r\n    }\r\n\r\n    deleteSubscriber(streamManager) {\r\n        let subscribers = this.state.subscribers;\r\n        let index = subscribers.indexOf(streamManager, 0);\r\n        if (index > -1) {\r\n            subscribers.splice(index, 1);\r\n            this.setState({\r\n                subscribers: subscribers,\r\n            });\r\n        }\r\n    }\r\n\r\n    joinSession() {\r\n        // --- 1) Get an OpenVidu object ---\r\n\r\n        this.OV = new OpenVidu();\r\n\r\n        // --- 2) Init a session ---\r\n\r\n        this.setState(\r\n            {\r\n                session: this.OV.initSession(),\r\n            },\r\n            () => {\r\n                var mySession = this.state.session;\r\n\r\n                // --- 3) Specify the actions when events take place in the session ---\r\n\r\n                // On every new Stream received...\r\n                mySession.on('streamCreated', (event) => {\r\n                    // Subscribe to the Stream to receive it. Second parameter is undefined\r\n                    // so OpenVidu doesn't create an HTML video by its own\r\n                    var subscriber = mySession.subscribe(event.stream, undefined);\r\n                    var subscribers = this.state.subscribers;\r\n                    subscribers.push(subscriber);\r\n\r\n                    // Update the state with the new subscribers\r\n                    this.setState({\r\n                        subscribers: subscribers,\r\n                    });\r\n                });\r\n\r\n                // On every Stream destroyed...\r\n                mySession.on('streamDestroyed', (event) => {\r\n\r\n                    // Remove the stream from 'subscribers' array\r\n                    this.deleteSubscriber(event.stream.streamManager);\r\n                });\r\n\r\n                // On every asynchronous exception...\r\n                mySession.on('exception', (exception) => {\r\n                    console.warn(exception);\r\n                });\r\n\r\n                // --- 4) Connect to the session with a valid user token ---\r\n\r\n                // Get a token from the OpenVidu deployment\r\n                this.getToken().then((token) => {\r\n                    // First param is the token got from the OpenVidu deployment. Second param can be retrieved by every user on event\r\n                    // 'streamCreated' (property Stream.connection.data), and will be appended to DOM as the user's nickname\r\n                    mySession.connect(token, { clientData: this.state.myUserName })\r\n                        .then(async () => {\r\n\r\n                            // --- 5) Get your own camera stream ---\r\n\r\n                            // Init a publisher passing undefined as targetElement (we don't want OpenVidu to insert a video\r\n                            // element: we will manage it on our own) and with the desired properties\r\n                            let publisher = await this.OV.initPublisherAsync(undefined, {\r\n                                audioSource: undefined, // The source of audio. If undefined default microphone\r\n                                videoSource: undefined, // The source of video. If undefined default webcam\r\n                                publishAudio: true, // Whether you want to start publishing with your audio unmuted or not\r\n                                publishVideo: true, // Whether you want to start publishing with your video enabled or not\r\n                                resolution: '640x480', // The resolution of your video\r\n                                frameRate: 30, // The frame rate of your video\r\n                                insertMode: 'APPEND', // How the video is inserted in the target element 'video-container'\r\n                                mirror: false, // Whether to mirror your local video or not\r\n                            });\r\n\r\n                            // --- 6) Publish your stream ---\r\n\r\n                            mySession.publish(publisher);\r\n\r\n                            // Obtain the current video device in use\r\n                            var devices = await this.OV.getDevices();\r\n                            var videoDevices = devices.filter(device => device.kind === 'videoinput');\r\n                            var currentVideoDeviceId = publisher.stream.getMediaStream().getVideoTracks()[0].getSettings().deviceId;\r\n                            var currentVideoDevice = videoDevices.find(device => device.deviceId === currentVideoDeviceId);\r\n\r\n                            // Set the main video in the page to display our webcam and store our Publisher\r\n                            this.setState({\r\n                                currentVideoDevice: currentVideoDevice,\r\n                                mainStreamManager: publisher,\r\n                                publisher: publisher,\r\n                            });\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log('There was an error connecting to the session:', error.code, error.message);\r\n                        });\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    leaveSession() {\r\n\r\n        // --- 7) Leave the session by calling 'disconnect' method over the Session object ---\r\n\r\n        const mySession = this.state.session;\r\n\r\n        if (mySession) {\r\n            mySession.disconnect();\r\n        }\r\n\r\n        // Empty all properties...\r\n        this.OV = null;\r\n        this.setState({\r\n            session: undefined,\r\n            subscribers: [],\r\n            mySessionId: 'SessionA',\r\n            myUserName: 'Participant' + Math.floor(Math.random() * 100),\r\n            mainStreamManager: undefined,\r\n            publisher: undefined\r\n        });\r\n    }\r\n\r\n    async switchCamera() {\r\n        try {\r\n            const devices = await this.OV.getDevices()\r\n            var videoDevices = devices.filter(device => device.kind === 'videoinput');\r\n\r\n            if (videoDevices && videoDevices.length > 1) {\r\n\r\n                var newVideoDevice = videoDevices.filter(device => device.deviceId !== this.state.currentVideoDevice.deviceId)\r\n\r\n                if (newVideoDevice.length > 0) {\r\n                    // Creating a new publisher with specific videoSource\r\n                    // In mobile devices the default and first camera is the front one\r\n                    var newPublisher = this.OV.initPublisher(undefined, {\r\n                        videoSource: newVideoDevice[0].deviceId,\r\n                        publishAudio: true,\r\n                        publishVideo: true,\r\n                        mirror: true\r\n                    });\r\n\r\n                    //newPublisher.once(\"accessAllowed\", () => {\r\n                    await this.state.session.unpublish(this.state.mainStreamManager)\r\n\r\n                    await this.state.session.publish(newPublisher)\r\n                    this.setState({\r\n                        currentVideoDevice: newVideoDevice[0],\r\n                        mainStreamManager: newPublisher,\r\n                        publisher: newPublisher,\r\n                    });\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const mySessionId = this.state.mySessionId;\r\n        const myUserName = this.state.myUserName;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                {this.state.session === undefined ? (\r\n                    <div id=\"join\">\r\n                        <div id=\"img-div\">\r\n                            <img src=\"resources/images/openvidu_grey_bg_transp_cropped.png\" alt=\"OpenVidu logo\" />\r\n                        </div>\r\n                        <div id=\"join-dialog\" className=\"jumbotron vertical-center\">\r\n                            <h1> Join a video session </h1>\r\n                            <form className=\"form-group\" onSubmit={this.joinSession}>\r\n                                <p>\r\n                                    <label>Participant: </label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        id=\"userName\"\r\n                                        value={myUserName}\r\n                                        onChange={this.handleChangeUserName}\r\n                                        required\r\n                                    />\r\n                                </p>\r\n                                <p>\r\n                                    <label> Session: </label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        id=\"sessionId\"\r\n                                        value={mySessionId}\r\n                                        onChange={this.handleChangeSessionId}\r\n                                        required\r\n                                    />\r\n                                </p>\r\n                                <p className=\"text-center\">\r\n                                    <input className=\"btn btn-lg btn-success\" name=\"commit\" type=\"submit\" value=\"JOIN\" />\r\n                                </p>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n\r\n                {this.state.session !== undefined ? (\r\n                    <div id=\"session\">\r\n                        <div id=\"session-header\">\r\n                            <h1 id=\"session-title\">{mySessionId}</h1>\r\n                            <input\r\n                                className=\"btn btn-large btn-danger\"\r\n                                type=\"button\"\r\n                                id=\"buttonLeaveSession\"\r\n                                onClick={this.leaveSession}\r\n                                value=\"Leave session\"\r\n                            />\r\n                        </div>\r\n\r\n                        {this.state.mainStreamManager !== undefined ? (\r\n                            <div id=\"main-video\" className=\"col-md-6\">\r\n                                <UserVideoComponent streamManager={this.state.mainStreamManager} />\r\n                                <input\r\n                                    className=\"btn btn-large btn-success\"\r\n                                    type=\"button\"\r\n                                    id=\"buttonSwitchCamera\"\r\n                                    onClick={this.switchCamera}\r\n                                    value=\"Switch Camera\"\r\n                                />\r\n                            </div>\r\n                        ) : null}\r\n                        <div id=\"video-container\" className=\"col-md-6\">\r\n                            {this.state.publisher !== undefined ? (\r\n                                <div className=\"stream-container col-md-6 col-xs-6\" onClick={() => this.handleMainVideoStream(this.state.publisher)}>\r\n                                    <UserVideoComponent\r\n                                        streamManager={this.state.publisher} />\r\n                                </div>\r\n                            ) : null}\r\n                            {this.state.subscribers.map((sub, i) => (\r\n                                <div key={i} className=\"stream-container col-md-6 col-xs-6\" onClick={() => this.handleMainVideoStream(sub)}>\r\n                                    <UserVideoComponent streamManager={sub} />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    /**\r\n     * --------------------------------------------\r\n     * GETTING A TOKEN FROM YOUR APPLICATION SERVER\r\n     * --------------------------------------------\r\n     * The methods below request the creation of a Session and a Token to\r\n     * your application server. This keeps your OpenVidu deployment secure.\r\n     * \r\n     * In this sample code, there is no user control at all. Anybody could\r\n     * access your application server endpoints! In a real production\r\n     * environment, your application server must identify the user to allow\r\n     * access to the endpoints.\r\n     * \r\n     * Visit https://docs.openvidu.io/en/stable/application-server to learn\r\n     * more about the integration of OpenVidu in your application server.\r\n     */\r\n    async getToken() {\r\n        const sessionId = await this.createSession(this.state.mySessionId);\r\n        return await this.createToken(sessionId);\r\n    }\r\n\r\n    async createSession(sessionId) {\r\n        const response = await axios.post(APPLICATION_SERVER_URL + 'api/sessions', { customSessionId: sessionId }, {\r\n            headers: { 'Content-Type': 'application/json', },\r\n        });\r\n        return response.data; // The sessionId\r\n    }\r\n\r\n    async createToken(sessionId) {\r\n        const response = await axios.post(APPLICATION_SERVER_URL + 'api/sessions/' + sessionId + '/connections', {}, {\r\n            headers: { 'Content-Type': 'application/json', },\r\n        });\r\n        return response.data; // The token\r\n    }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}