{"ast":null,"code":"\"use strict\";\n\n/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebRtcStats = void 0;\nvar OpenViduLogger_1 = require(\"../Logger/OpenViduLogger\");\nvar Platform_1 = require(\"../Utils/Platform\");\n/**\n * @hidden\n */\nvar logger = OpenViduLogger_1.OpenViduLogger.getInstance();\n/**\n * @hidden\n */\nvar platform;\nvar WebRtcStats = /** @class */function () {\n  function WebRtcStats(stream) {\n    this.stream = stream;\n    this.STATS_ITEM_NAME = 'webrtc-stats-config';\n    this.webRtcStatsEnabled = false;\n    this.statsInterval = 1;\n    platform = Platform_1.PlatformUtils.getInstance();\n  }\n  WebRtcStats.prototype.isEnabled = function () {\n    return this.webRtcStatsEnabled;\n  };\n  WebRtcStats.prototype.initWebRtcStats = function () {\n    var _this = this;\n    var webrtcObj = localStorage.getItem(this.STATS_ITEM_NAME);\n    if (!!webrtcObj) {\n      this.webRtcStatsEnabled = true;\n      var webrtcStatsConfig = JSON.parse(webrtcObj);\n      // webrtc object found in local storage\n      logger.warn('WebRtc stats enabled for stream ' + this.stream.streamId + ' of connection ' + this.stream.connection.connectionId);\n      logger.warn('localStorage item: ' + JSON.stringify(webrtcStatsConfig));\n      this.POST_URL = webrtcStatsConfig.httpEndpoint;\n      this.statsInterval = webrtcStatsConfig.interval; // Interval in seconds\n      this.webRtcStatsIntervalId = setInterval(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4 /*yield*/, this.sendStatsToHttpEndpoint()];\n              case 1:\n                _a.sent();\n                return [2 /*return*/];\n            }\n          });\n        });\n      }, this.statsInterval * 1000);\n    } else {\n      logger.debug('WebRtc stats not enabled');\n    }\n  };\n  // {\n  // \"localCandidate\": {\n  //     \"id\": \"RTCIceCandidate_/r4P1y2Q\",\n  //     \"timestamp\": 1616080155617,\n  //     \"type\": \"local-candidate\",\n  //     \"transportId\": \"RTCTransport_0_1\",\n  //     \"isRemote\": false,\n  //     \"networkType\": \"wifi\",\n  //     \"ip\": \"123.45.67.89\",\n  //     \"port\": 63340,\n  //     \"protocol\": \"udp\",\n  //     \"candidateType\": \"srflx\",\n  //     \"priority\": 1686052607,\n  //     \"deleted\": false,\n  //     \"raw\": [\n  //     \"candidate:3345412921 1 udp 1686052607 123.45.67.89 63340 typ srflx raddr 192.168.1.31 rport 63340 generation 0 ufrag 0ZtT network-id 1 network-cost 10\",\n  //     \"candidate:58094482 1 udp 41885695 98.76.54.32 44431 typ relay raddr 123.45.67.89 rport 63340 generation 0 ufrag 0ZtT network-id 1 network-cost 10\"\n  //     ]\n  // },\n  // \"remoteCandidate\": {\n  //     \"id\": \"RTCIceCandidate_1YO18gph\",\n  //     \"timestamp\": 1616080155617,\n  //     \"type\": \"remote-candidate\",\n  //     \"transportId\": \"RTCTransport_0_1\",\n  //     \"isRemote\": true,\n  //     \"ip\": \"12.34.56.78\",\n  //     \"port\": 64989,\n  //     \"protocol\": \"udp\",\n  //     \"candidateType\": \"srflx\",\n  //     \"priority\": 1679819263,\n  //     \"deleted\": false,\n  //     \"raw\": [\n  //     \"candidate:16 1 UDP 1679819263 12.34.56.78 64989 typ srflx raddr 172.19.0.1 rport 64989\",\n  //     \"candidate:16 1 UDP 1679819263 12.34.56.78 64989 typ srflx raddr 172.19.0.1 rport 64989\"\n  //     ]\n  // }\n  // }\n  // Have been tested in:\n  //   - Linux Desktop:\n  //       - Chrome 89.0.4389.90\n  //       - Opera 74.0.3911.218\n  //       - Firefox 86\n  //       - Microsoft Edge 91.0.825.0\n  //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n  //   - Windows Desktop:\n  //       - Chrome 89.0.4389.90\n  //       - Opera 74.0.3911.232\n  //       - Firefox 86.0.1\n  //       - Microsoft Edge 89.0.774.54\n  //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n  //   - MacOS Desktop:\n  //       - Chrome 89.0.4389.90\n  //       - Firefox 87.0\n  //       - Opera 75.0.3969.93\n  //       - Microsoft Edge 89.0.774.57\n  //       - Safari 14.0 (14610.1.28.1.9)\n  //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n  //   - Android:\n  //       - Chrome Mobile 89.0.4389.90\n  //       - Opera 62.3.3146.57763\n  //       - Firefox Mobile 86.6.1\n  //       - Microsoft Edge Mobile 46.02.4.5147\n  //       - Ionic 5\n  //       - React Native 0.64\n  //   - iOS:\n  //       - Safari Mobile\n  //       - ¿Ionic?\n  //       - ¿React Native?\n  WebRtcStats.prototype.getSelectedIceCandidateInfo = function () {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var statsReport, transportStat, candidatePairs, localCandidates, remoteCandidates, selectedCandidatePair, selectedCandidatePairId, length_1, iterator, i, candidatePair, localCandidateId, remoteCandidateId, finalLocalCandidate, candList, cand, _i, cand_1, c, finalRemoteCandidate, candList, cand, _a, cand_2, c;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              return [4 /*yield*/, this.stream.getRTCPeerConnection().getStats()];\n            case 1:\n              statsReport = _b.sent();\n              candidatePairs = new Map();\n              localCandidates = new Map();\n              remoteCandidates = new Map();\n              statsReport.forEach(function (stat) {\n                if (stat.type === 'transport' && (platform.isChromium() || platform.isSafariBrowser() || platform.isReactNative())) {\n                  transportStat = stat;\n                }\n                switch (stat.type) {\n                  case 'candidate-pair':\n                    candidatePairs.set(stat.id, stat);\n                    break;\n                  case 'local-candidate':\n                    localCandidates.set(stat.id, stat);\n                    break;\n                  case 'remote-candidate':\n                    remoteCandidates.set(stat.id, stat);\n                    break;\n                }\n              });\n              if (transportStat != null) {\n                selectedCandidatePairId = transportStat.selectedCandidatePairId;\n                selectedCandidatePair = candidatePairs.get(selectedCandidatePairId);\n              } else {\n                length_1 = candidatePairs.size;\n                iterator = candidatePairs.values();\n                for (i = 0; i < length_1; i++) {\n                  candidatePair = iterator.next().value;\n                  if (candidatePair['selected']) {\n                    selectedCandidatePair = candidatePair;\n                    break;\n                  }\n                }\n              }\n              localCandidateId = selectedCandidatePair.localCandidateId;\n              remoteCandidateId = selectedCandidatePair.remoteCandidateId;\n              finalLocalCandidate = localCandidates.get(localCandidateId);\n              if (!!finalLocalCandidate) {\n                candList = this.stream.getLocalIceCandidateList();\n                cand = candList.filter(function (c) {\n                  return !!c.candidate && (c.candidate.indexOf(finalLocalCandidate.ip) >= 0 || c.candidate.indexOf(finalLocalCandidate.address) >= 0) && c.candidate.indexOf(finalLocalCandidate.port) >= 0;\n                });\n                finalLocalCandidate.raw = [];\n                for (_i = 0, cand_1 = cand; _i < cand_1.length; _i++) {\n                  c = cand_1[_i];\n                  finalLocalCandidate.raw.push(c.candidate);\n                }\n              } else {\n                finalLocalCandidate = 'ERROR: No active local ICE candidate. Probably ICE-TCP is being used';\n              }\n              finalRemoteCandidate = remoteCandidates.get(remoteCandidateId);\n              if (!!finalRemoteCandidate) {\n                candList = this.stream.getRemoteIceCandidateList();\n                cand = candList.filter(function (c) {\n                  return !!c.candidate && (c.candidate.indexOf(finalRemoteCandidate.ip) >= 0 || c.candidate.indexOf(finalRemoteCandidate.address) >= 0) && c.candidate.indexOf(finalRemoteCandidate.port) >= 0;\n                });\n                finalRemoteCandidate.raw = [];\n                for (_a = 0, cand_2 = cand; _a < cand_2.length; _a++) {\n                  c = cand_2[_a];\n                  finalRemoteCandidate.raw.push(c.candidate);\n                }\n              } else {\n                finalRemoteCandidate = 'ERROR: No active remote ICE candidate. Probably ICE-TCP is being used';\n              }\n              return [2 /*return*/, resolve({\n                localCandidate: finalLocalCandidate,\n                remoteCandidate: finalRemoteCandidate\n              })];\n          }\n        });\n      });\n    });\n  };\n  WebRtcStats.prototype.stopWebRtcStats = function () {\n    if (this.webRtcStatsEnabled) {\n      clearInterval(this.webRtcStatsIntervalId);\n      logger.warn('WebRtc stats stopped for disposed stream ' + this.stream.streamId + ' of connection ' + this.stream.connection.connectionId);\n    }\n  };\n  WebRtcStats.prototype.sendStats = function (url, response) {\n    return __awaiter(this, void 0, void 0, function () {\n      var configuration, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n            configuration = {\n              headers: {\n                'Content-type': 'application/json'\n              },\n              body: JSON.stringify(response),\n              method: 'POST'\n            };\n            return [4 /*yield*/, fetch(url, configuration)];\n          case 1:\n            _a.sent();\n            return [3 /*break*/, 3];\n          case 2:\n            error_1 = _a.sent();\n            logger.error(\"sendStats error: \".concat(JSON.stringify(error_1)));\n            return [3 /*break*/, 3];\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  WebRtcStats.prototype.sendStatsToHttpEndpoint = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var webrtcStats, response, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 3,, 4]);\n            return [4 /*yield*/, this.getCommonStats()];\n          case 1:\n            webrtcStats = _a.sent();\n            response = this.generateJSONStatsResponse(webrtcStats);\n            return [4 /*yield*/, this.sendStats(this.POST_URL, response)];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            error_2 = _a.sent();\n            logger.log(error_2);\n            return [3 /*break*/, 4];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  // Have been tested in:\n  //   - Linux Desktop:\n  //       - Chrome 89.0.4389.90\n  //       - Opera 74.0.3911.218\n  //       - Firefox 86\n  //       - Microsoft Edge 91.0.825.0\n  //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n  //   - Windows Desktop:\n  //       - Chrome 89.0.4389.90\n  //       - Opera 74.0.3911.232\n  //       - Firefox 86.0.1\n  //       - Microsoft Edge 89.0.774.54\n  //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n  //   - MacOS Desktop:\n  //       - Chrome 89.0.4389.90\n  //       - Opera 75.0.3969.93\n  //       - Firefox 87.0\n  //       - Microsoft Edge 89.0.774.57\n  //       - Safari 14.0 (14610.1.28.1.9)\n  //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n  //   - Android:\n  //       - Chrome Mobile 89.0.4389.90\n  //       - Opera 62.3.3146.57763\n  //       - Firefox Mobile 86.6.1\n  //       - Microsoft Edge Mobile 46.02.4.5147\n  //       - Ionic 5\n  //       - React Native 0.64\n  //   - iOS:\n  //       - Safari Mobile\n  //       - ¿Ionic?\n  //       - ¿React Native?\n  WebRtcStats.prototype.getCommonStats = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        return [2 /*return*/, new Promise(function (resolve, reject) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var statsReport, response_1, videoTrackStats_1, candidatePairStats_1, error_3;\n            var _this = this;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  _a.trys.push([0, 2,, 3]);\n                  return [4 /*yield*/, this.stream.getRTCPeerConnection().getStats()];\n                case 1:\n                  statsReport = _a.sent();\n                  response_1 = this.getWebRtcStatsResponseOutline();\n                  videoTrackStats_1 = ['framesReceived', 'framesDropped', 'framesSent', 'frameHeight', 'frameWidth'];\n                  candidatePairStats_1 = ['availableOutgoingBitrate', 'currentRoundTripTime'];\n                  statsReport.forEach(function (stat) {\n                    var mediaType = stat.mediaType != null ? stat.mediaType : stat.kind;\n                    var addStat = function addStat(direction, key) {\n                      if (stat[key] != null && response_1[direction] != null) {\n                        if (!mediaType && videoTrackStats_1.indexOf(key) > -1) {\n                          mediaType = 'video';\n                        }\n                        if (direction != null && mediaType != null && key != null && response_1[direction][mediaType] != null) {\n                          response_1[direction][mediaType][key] = Number(stat[key]);\n                        } else if (direction != null && key != null && candidatePairStats_1.includes(key)) {\n                          // candidate-pair-stats\n                          response_1[direction][key] = Number(stat[key]);\n                        }\n                      }\n                    };\n                    switch (stat.type) {\n                      case 'outbound-rtp':\n                        addStat('outbound', 'bytesSent');\n                        addStat('outbound', 'packetsSent');\n                        addStat('outbound', 'framesEncoded');\n                        addStat('outbound', 'nackCount');\n                        addStat('outbound', 'firCount');\n                        addStat('outbound', 'pliCount');\n                        addStat('outbound', 'qpSum');\n                        break;\n                      case 'inbound-rtp':\n                        addStat('inbound', 'bytesReceived');\n                        addStat('inbound', 'packetsReceived');\n                        addStat('inbound', 'packetsLost');\n                        addStat('inbound', 'jitter');\n                        addStat('inbound', 'framesDecoded');\n                        addStat('inbound', 'nackCount');\n                        addStat('inbound', 'firCount');\n                        addStat('inbound', 'pliCount');\n                        break;\n                      case 'track':\n                        addStat('inbound', 'jitterBufferDelay');\n                        addStat('inbound', 'framesReceived');\n                        addStat('outbound', 'framesDropped');\n                        addStat('outbound', 'framesSent');\n                        addStat(_this.stream.isLocal() ? 'outbound' : 'inbound', 'frameHeight');\n                        addStat(_this.stream.isLocal() ? 'outbound' : 'inbound', 'frameWidth');\n                        break;\n                      case 'candidate-pair':\n                        addStat('candidatepair', 'currentRoundTripTime');\n                        addStat('candidatepair', 'availableOutgoingBitrate');\n                        break;\n                    }\n                  });\n                  // Delete candidatepair from response if null\n                  if (!(response_1 === null || response_1 === void 0 ? void 0 : response_1.candidatepair) || Object.keys(response_1.candidatepair).length === 0) {\n                    delete response_1.candidatepair;\n                  }\n                  return [2 /*return*/, resolve(response_1)];\n                case 2:\n                  error_3 = _a.sent();\n                  logger.error('Error getting common stats: ', error_3);\n                  return [2 /*return*/, reject(error_3)];\n                case 3:\n                  return [2 /*return*/];\n              }\n            });\n          });\n        })];\n      });\n    });\n  };\n\n  WebRtcStats.prototype.generateJSONStatsResponse = function (stats) {\n    return {\n      '@timestamp': new Date().toISOString(),\n      participant_id: this.stream.connection.data,\n      session_id: this.stream.session.sessionId,\n      platform: platform.getName(),\n      platform_description: platform.getDescription(),\n      stream: 'webRTC',\n      webrtc_stats: stats\n    };\n  };\n  WebRtcStats.prototype.getWebRtcStatsResponseOutline = function () {\n    if (this.stream.isLocal()) {\n      return {\n        outbound: {\n          audio: {},\n          video: {}\n        },\n        candidatepair: {}\n      };\n    } else {\n      return {\n        inbound: {\n          audio: {},\n          video: {}\n        }\n      };\n    }\n  };\n  return WebRtcStats;\n}();\nexports.WebRtcStats = WebRtcStats;","map":{"version":3,"mappings":"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","names":["logger","OpenViduLogger_1","getInstance","platform","stream","Platform_1","WebRtcStats","webRtcStatsEnabled","webrtcObj","localStorage","getItem","STATS_ITEM_NAME","webrtcStatsConfig","JSON","parse","warn","streamId","connection","connectionId","stringify","POST_URL","httpEndpoint","statsInterval","interval","webRtcStatsIntervalId","setInterval","sendStatsToHttpEndpoint","_a","debug","Promise","resolve","reject","getRTCPeerConnection","getStats","statsReport","_b","candidatePairs","Map","localCandidates","remoteCandidates","forEach","stat","type","isChromium","isSafariBrowser","isReactNative","transportStat","set","id","selectedCandidatePairId","selectedCandidatePair","get","length_1","size","iterator","values","i","candidatePair","next","value","localCandidateId","remoteCandidateId","finalLocalCandidate","candList","getLocalIceCandidateList","cand","filter","c","candidate","indexOf","ip","address","port","raw","cand_1","_i","push","finalRemoteCandidate","getRemoteIceCandidateList","cand_2","localCandidate","remoteCandidate","clearInterval","url","response","configuration","headers","body","method","fetch","error","error_1","getCommonStats","webrtcStats","generateJSONStatsResponse","sendStats","log","error_2","response_1","getWebRtcStatsResponseOutline","videoTrackStats_1","candidatePairStats_1","mediaType","kind","addStat","direction","key","Number","includes","_this","isLocal","candidatepair","Object","keys","length","error_3","stats","Date","toISOString","participant_id","data","session_id","session","sessionId","getName","platform_description","getDescription","webrtc_stats","outbound","audio","video","inbound","exports"],"sources":["C:\\Users\\user\\Desktop\\openvidu-client\\node_modules\\openvidu-browser\\src\\OpenViduInternal\\WebRtcStats\\WebRtcStats.ts"],"sourcesContent":["/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n// tslint:disable:no-string-literal\n\nimport { Stream } from '../../OpenVidu/Stream';\nimport { OpenViduLogger } from '../Logger/OpenViduLogger';\nimport { PlatformUtils } from '../Utils/Platform';\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n/**\n * @hidden\n */\nlet platform: PlatformUtils;\n\ninterface WebrtcStatsConfig {\n    interval: number;\n    httpEndpoint: string;\n}\n\ninterface JSONStatsResponse {\n    '@timestamp': string;\n    participant_id: string;\n    session_id: string;\n    platform: string;\n    platform_description: string;\n    stream: string;\n    webrtc_stats: IWebrtcStats;\n}\n\n/**\n * Common WebRtcSTats for latest Chromium and Firefox versions\n */\ninterface IWebrtcStats {\n    inbound?: {\n        audio:\n            | {\n                  bytesReceived: number;\n                  packetsReceived: number;\n                  packetsLost: number;\n                  jitter: number;\n              }\n            | {};\n        video:\n            | {\n                  bytesReceived: number;\n                  packetsReceived: number;\n                  packetsLost: number;\n                  jitter?: number; // Firefox\n                  jitterBufferDelay?: number; // Chrome\n                  framesDecoded: number;\n                  firCount: number;\n                  nackCount: number;\n                  pliCount: number;\n                  frameHeight?: number; // Chrome\n                  frameWidth?: number; // Chrome\n                  framesDropped?: number; // Chrome\n                  framesReceived?: number; // Chrome\n              }\n            | {};\n    };\n    outbound?: {\n        audio:\n            | {\n                  bytesSent: number;\n                  packetsSent: number;\n              }\n            | {};\n        video:\n            | {\n                  bytesSent: number;\n                  packetsSent: number;\n                  firCount: number;\n                  framesEncoded: number;\n                  nackCount: number;\n                  pliCount: number;\n                  qpSum: number;\n                  frameHeight?: number; // Chrome\n                  frameWidth?: number; // Chrome\n                  framesSent?: number; // Chrome\n              }\n            | {};\n    };\n    candidatepair?: {\n        currentRoundTripTime?: number; // Chrome\n        availableOutgoingBitrate?: number; //Chrome\n        // availableIncomingBitrate?: number // No support for any browsers (https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/availableIncomingBitrate)\n    };\n}\n\nexport class WebRtcStats {\n    private readonly STATS_ITEM_NAME = 'webrtc-stats-config';\n\n    private webRtcStatsEnabled = false;\n    private webRtcStatsIntervalId: NodeJS.Timer;\n    private statsInterval = 1;\n    private POST_URL: string;\n\n    constructor(private stream: Stream) {\n        platform = PlatformUtils.getInstance();\n    }\n\n    public isEnabled(): boolean {\n        return this.webRtcStatsEnabled;\n    }\n\n    public initWebRtcStats(): void {\n        const webrtcObj = localStorage.getItem(this.STATS_ITEM_NAME);\n\n        if (!!webrtcObj) {\n            this.webRtcStatsEnabled = true;\n            const webrtcStatsConfig: WebrtcStatsConfig = JSON.parse(webrtcObj);\n            // webrtc object found in local storage\n            logger.warn(\n                'WebRtc stats enabled for stream ' + this.stream.streamId + ' of connection ' + this.stream.connection.connectionId\n            );\n            logger.warn('localStorage item: ' + JSON.stringify(webrtcStatsConfig));\n\n            this.POST_URL = webrtcStatsConfig.httpEndpoint;\n            this.statsInterval = webrtcStatsConfig.interval; // Interval in seconds\n\n            this.webRtcStatsIntervalId = setInterval(async () => {\n                await this.sendStatsToHttpEndpoint();\n            }, this.statsInterval * 1000);\n        } else {\n            logger.debug('WebRtc stats not enabled');\n        }\n    }\n\n    // {\n    // \"localCandidate\": {\n    //     \"id\": \"RTCIceCandidate_/r4P1y2Q\",\n    //     \"timestamp\": 1616080155617,\n    //     \"type\": \"local-candidate\",\n    //     \"transportId\": \"RTCTransport_0_1\",\n    //     \"isRemote\": false,\n    //     \"networkType\": \"wifi\",\n    //     \"ip\": \"123.45.67.89\",\n    //     \"port\": 63340,\n    //     \"protocol\": \"udp\",\n    //     \"candidateType\": \"srflx\",\n    //     \"priority\": 1686052607,\n    //     \"deleted\": false,\n    //     \"raw\": [\n    //     \"candidate:3345412921 1 udp 1686052607 123.45.67.89 63340 typ srflx raddr 192.168.1.31 rport 63340 generation 0 ufrag 0ZtT network-id 1 network-cost 10\",\n    //     \"candidate:58094482 1 udp 41885695 98.76.54.32 44431 typ relay raddr 123.45.67.89 rport 63340 generation 0 ufrag 0ZtT network-id 1 network-cost 10\"\n    //     ]\n    // },\n    // \"remoteCandidate\": {\n    //     \"id\": \"RTCIceCandidate_1YO18gph\",\n    //     \"timestamp\": 1616080155617,\n    //     \"type\": \"remote-candidate\",\n    //     \"transportId\": \"RTCTransport_0_1\",\n    //     \"isRemote\": true,\n    //     \"ip\": \"12.34.56.78\",\n    //     \"port\": 64989,\n    //     \"protocol\": \"udp\",\n    //     \"candidateType\": \"srflx\",\n    //     \"priority\": 1679819263,\n    //     \"deleted\": false,\n    //     \"raw\": [\n    //     \"candidate:16 1 UDP 1679819263 12.34.56.78 64989 typ srflx raddr 172.19.0.1 rport 64989\",\n    //     \"candidate:16 1 UDP 1679819263 12.34.56.78 64989 typ srflx raddr 172.19.0.1 rport 64989\"\n    //     ]\n    // }\n    // }\n    // Have been tested in:\n    //   - Linux Desktop:\n    //       - Chrome 89.0.4389.90\n    //       - Opera 74.0.3911.218\n    //       - Firefox 86\n    //       - Microsoft Edge 91.0.825.0\n    //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n    //   - Windows Desktop:\n    //       - Chrome 89.0.4389.90\n    //       - Opera 74.0.3911.232\n    //       - Firefox 86.0.1\n    //       - Microsoft Edge 89.0.774.54\n    //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n    //   - MacOS Desktop:\n    //       - Chrome 89.0.4389.90\n    //       - Firefox 87.0\n    //       - Opera 75.0.3969.93\n    //       - Microsoft Edge 89.0.774.57\n    //       - Safari 14.0 (14610.1.28.1.9)\n    //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n    //   - Android:\n    //       - Chrome Mobile 89.0.4389.90\n    //       - Opera 62.3.3146.57763\n    //       - Firefox Mobile 86.6.1\n    //       - Microsoft Edge Mobile 46.02.4.5147\n    //       - Ionic 5\n    //       - React Native 0.64\n    //   - iOS:\n    //       - Safari Mobile\n    //       - ¿Ionic?\n    //       - ¿React Native?\n    public getSelectedIceCandidateInfo(): Promise<any> {\n        return new Promise(async (resolve, reject) => {\n            const statsReport: any = await this.stream.getRTCPeerConnection().getStats();\n            let transportStat;\n            const candidatePairs: Map<string, any> = new Map();\n            const localCandidates: Map<string, any> = new Map();\n            const remoteCandidates: Map<string, any> = new Map();\n            statsReport.forEach((stat: any) => {\n                if (stat.type === 'transport' && (platform.isChromium() || platform.isSafariBrowser() || platform.isReactNative())) {\n                    transportStat = stat;\n                }\n                switch (stat.type) {\n                    case 'candidate-pair':\n                        candidatePairs.set(stat.id, stat);\n                        break;\n                    case 'local-candidate':\n                        localCandidates.set(stat.id, stat);\n                        break;\n                    case 'remote-candidate':\n                        remoteCandidates.set(stat.id, stat);\n                        break;\n                }\n            });\n            let selectedCandidatePair;\n            if (transportStat != null) {\n                const selectedCandidatePairId = transportStat.selectedCandidatePairId;\n                selectedCandidatePair = candidatePairs.get(selectedCandidatePairId);\n            } else {\n                // This is basically Firefox\n                const length = candidatePairs.size;\n                const iterator = candidatePairs.values();\n                for (let i = 0; i < length; i++) {\n                    const candidatePair = iterator.next().value;\n                    if (candidatePair['selected']) {\n                        selectedCandidatePair = candidatePair;\n                        break;\n                    }\n                }\n            }\n            const localCandidateId = selectedCandidatePair.localCandidateId;\n            const remoteCandidateId = selectedCandidatePair.remoteCandidateId;\n            let finalLocalCandidate = localCandidates.get(localCandidateId);\n            if (!!finalLocalCandidate) {\n                const candList = this.stream.getLocalIceCandidateList();\n                const cand = candList.filter((c: RTCIceCandidate) => {\n                    return (\n                        !!c.candidate &&\n                        (c.candidate.indexOf(finalLocalCandidate.ip) >= 0 || c.candidate.indexOf(finalLocalCandidate.address) >= 0) &&\n                        c.candidate.indexOf(finalLocalCandidate.port) >= 0\n                    );\n                });\n                finalLocalCandidate.raw = [];\n                for (let c of cand) {\n                    finalLocalCandidate.raw.push(c.candidate);\n                }\n            } else {\n                finalLocalCandidate = 'ERROR: No active local ICE candidate. Probably ICE-TCP is being used';\n            }\n\n            let finalRemoteCandidate = remoteCandidates.get(remoteCandidateId);\n            if (!!finalRemoteCandidate) {\n                const candList = this.stream.getRemoteIceCandidateList();\n                const cand = candList.filter((c: RTCIceCandidate) => {\n                    return (\n                        !!c.candidate &&\n                        (c.candidate.indexOf(finalRemoteCandidate.ip) >= 0 || c.candidate.indexOf(finalRemoteCandidate.address) >= 0) &&\n                        c.candidate.indexOf(finalRemoteCandidate.port) >= 0\n                    );\n                });\n                finalRemoteCandidate.raw = [];\n                for (let c of cand) {\n                    finalRemoteCandidate.raw.push(c.candidate);\n                }\n            } else {\n                finalRemoteCandidate = 'ERROR: No active remote ICE candidate. Probably ICE-TCP is being used';\n            }\n\n            return resolve({\n                localCandidate: finalLocalCandidate,\n                remoteCandidate: finalRemoteCandidate\n            });\n        });\n    }\n\n    public stopWebRtcStats() {\n        if (this.webRtcStatsEnabled) {\n            clearInterval(this.webRtcStatsIntervalId);\n            logger.warn(\n                'WebRtc stats stopped for disposed stream ' + this.stream.streamId + ' of connection ' + this.stream.connection.connectionId\n            );\n        }\n    }\n\n    private async sendStats(url: string, response: JSONStatsResponse): Promise<void> {\n        try {\n            const configuration: RequestInit = {\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify(response),\n                method: 'POST'\n            };\n            await fetch(url, configuration);\n        } catch (error) {\n            logger.error(`sendStats error: ${JSON.stringify(error)}`);\n        }\n    }\n\n    private async sendStatsToHttpEndpoint(): Promise<void> {\n        try {\n            const webrtcStats: IWebrtcStats = await this.getCommonStats();\n            const response = this.generateJSONStatsResponse(webrtcStats);\n            await this.sendStats(this.POST_URL, response);\n        } catch (error) {\n            logger.log(error);\n        }\n    }\n\n    // Have been tested in:\n    //   - Linux Desktop:\n    //       - Chrome 89.0.4389.90\n    //       - Opera 74.0.3911.218\n    //       - Firefox 86\n    //       - Microsoft Edge 91.0.825.0\n    //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n    //   - Windows Desktop:\n    //       - Chrome 89.0.4389.90\n    //       - Opera 74.0.3911.232\n    //       - Firefox 86.0.1\n    //       - Microsoft Edge 89.0.774.54\n    //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n    //   - MacOS Desktop:\n    //       - Chrome 89.0.4389.90\n    //       - Opera 75.0.3969.93\n    //       - Firefox 87.0\n    //       - Microsoft Edge 89.0.774.57\n    //       - Safari 14.0 (14610.1.28.1.9)\n    //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n    //   - Android:\n    //       - Chrome Mobile 89.0.4389.90\n    //       - Opera 62.3.3146.57763\n    //       - Firefox Mobile 86.6.1\n    //       - Microsoft Edge Mobile 46.02.4.5147\n    //       - Ionic 5\n    //       - React Native 0.64\n    //   - iOS:\n    //       - Safari Mobile\n    //       - ¿Ionic?\n    //       - ¿React Native?\n    public async getCommonStats(): Promise<IWebrtcStats> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const statsReport: any = await this.stream.getRTCPeerConnection().getStats();\n                const response: IWebrtcStats = this.getWebRtcStatsResponseOutline();\n                const videoTrackStats = ['framesReceived', 'framesDropped', 'framesSent', 'frameHeight', 'frameWidth'];\n                const candidatePairStats = ['availableOutgoingBitrate', 'currentRoundTripTime'];\n\n                statsReport.forEach((stat: any) => {\n                    let mediaType = stat.mediaType != null ? stat.mediaType : stat.kind;\n                    const addStat = (direction: string, key: string): void => {\n                        if (stat[key] != null && response[direction] != null) {\n                            if (!mediaType && videoTrackStats.indexOf(key) > -1) {\n                                mediaType = 'video';\n                            }\n                            if (direction != null && mediaType != null && key != null && response[direction][mediaType] != null) {\n                                response[direction][mediaType][key] = Number(stat[key]);\n                            } else if (direction != null && key != null && candidatePairStats.includes(key)) {\n                                // candidate-pair-stats\n                                response[direction][key] = Number(stat[key]);\n                            }\n                        }\n                    };\n\n                    switch (stat.type) {\n                        case 'outbound-rtp':\n                            addStat('outbound', 'bytesSent');\n                            addStat('outbound', 'packetsSent');\n                            addStat('outbound', 'framesEncoded');\n                            addStat('outbound', 'nackCount');\n                            addStat('outbound', 'firCount');\n                            addStat('outbound', 'pliCount');\n                            addStat('outbound', 'qpSum');\n                            break;\n                        case 'inbound-rtp':\n                            addStat('inbound', 'bytesReceived');\n                            addStat('inbound', 'packetsReceived');\n                            addStat('inbound', 'packetsLost');\n                            addStat('inbound', 'jitter');\n                            addStat('inbound', 'framesDecoded');\n                            addStat('inbound', 'nackCount');\n                            addStat('inbound', 'firCount');\n                            addStat('inbound', 'pliCount');\n                            break;\n                        case 'track':\n                            addStat('inbound', 'jitterBufferDelay');\n                            addStat('inbound', 'framesReceived');\n                            addStat('outbound', 'framesDropped');\n                            addStat('outbound', 'framesSent');\n                            addStat(this.stream.isLocal() ? 'outbound' : 'inbound', 'frameHeight');\n                            addStat(this.stream.isLocal() ? 'outbound' : 'inbound', 'frameWidth');\n                            break;\n                        case 'candidate-pair':\n                            addStat('candidatepair', 'currentRoundTripTime');\n                            addStat('candidatepair', 'availableOutgoingBitrate');\n                            break;\n                    }\n                });\n\n                // Delete candidatepair from response if null\n                if (!response?.candidatepair || Object.keys(<Object>response.candidatepair).length === 0) {\n                    delete response.candidatepair;\n                }\n\n                return resolve(response);\n            } catch (error) {\n                logger.error('Error getting common stats: ', error);\n                return reject(error);\n            }\n        });\n    }\n\n    private generateJSONStatsResponse(stats: IWebrtcStats): JSONStatsResponse {\n        return {\n            '@timestamp': new Date().toISOString(),\n            participant_id: this.stream.connection.data,\n            session_id: this.stream.session.sessionId,\n            platform: platform.getName(),\n            platform_description: platform.getDescription(),\n            stream: 'webRTC',\n            webrtc_stats: stats\n        };\n    }\n\n    private getWebRtcStatsResponseOutline(): IWebrtcStats {\n        if (this.stream.isLocal()) {\n            return {\n                outbound: {\n                    audio: {},\n                    video: {}\n                },\n                candidatepair: {}\n            };\n        } else {\n            return {\n                inbound: {\n                    audio: {},\n                    video: {}\n                }\n            };\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}