{"ast":null,"code":"\"use strict\";\n\n/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PublisherSpeakingEvent = void 0;\nvar Event_1 = require(\"./Event\");\n/**\n * Triggered by:\n * - `publisherStartSpeaking` (available for [Session](/en/stable/api/openvidu-browser/interfaces/SessionEventMap.html#publisherStartSpeaking) and [StreamManager](/en/stable/api/openvidu-browser/interfaces/StreamManagerEventMap.html#publisherStartSpeaking) objects)\n * - `publisherStopSpeaking` (available for [Session](/en/stable/api/openvidu-browser/interfaces/SessionEventMap.html#publisherStopSpeaking) and [StreamManager](/en/stable/api/openvidu-browser/interfaces/StreamManagerEventMap.html#publisherStopSpeaking) objects)\n */\nvar PublisherSpeakingEvent = /** @class */function (_super) {\n  __extends(PublisherSpeakingEvent, _super);\n  /**\n   * @hidden\n   */\n  function PublisherSpeakingEvent(target, type, connection, streamId) {\n    var _this = _super.call(this, false, target, type) || this;\n    _this.type = type;\n    _this.connection = connection;\n    _this.streamId = streamId;\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n  // tslint:disable-next-line:no-empty\n  PublisherSpeakingEvent.prototype.callDefaultBehavior = function () {};\n  return PublisherSpeakingEvent;\n}(Event_1.Event);\nexports.PublisherSpeakingEvent = PublisherSpeakingEvent;","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA;AAKA;;;;;AAKA;EAA4CA;EAWxC;;;EAGA,gCAAYC,MAA+B,EAAEC,IAAY,EAAEC,UAAsB,EAAEC,QAAgB;IAAnG,YACIC,kBAAM,KAAK,EAAEJ,MAAM,EAAEC,IAAI,CAAC;IAC1BI,KAAI,CAACJ,IAAI,GAAGA,IAAI;IAChBI,KAAI,CAACH,UAAU,GAAGA,UAAU;IAC5BG,KAAI,CAACF,QAAQ,GAAGA,QAAQ;;EAC5B;EAEA;;;EAGA;EACAG,oDAAmB,GAAnB,aAAuB,CAAC;EAC5B,6BAAC;AAAD,CAAC,CA1B2CC,aAAK;AAApCC","names":["__extends","target","type","connection","streamId","_super","_this","PublisherSpeakingEvent","Event_1","exports"],"sources":["C:\\Users\\user\\Desktop\\openvidu-client\\node_modules\\openvidu-browser\\src\\OpenViduInternal\\Events\\PublisherSpeakingEvent.ts"],"sourcesContent":["/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Connection } from '../../OpenVidu/Connection';\nimport { Session } from '../../OpenVidu/Session';\nimport { StreamManager } from '../../OpenVidu/StreamManager';\n\n/**\n * Triggered by:\n * - `publisherStartSpeaking` (available for [Session](/en/stable/api/openvidu-browser/interfaces/SessionEventMap.html#publisherStartSpeaking) and [StreamManager](/en/stable/api/openvidu-browser/interfaces/StreamManagerEventMap.html#publisherStartSpeaking) objects)\n * - `publisherStopSpeaking` (available for [Session](/en/stable/api/openvidu-browser/interfaces/SessionEventMap.html#publisherStopSpeaking) and [StreamManager](/en/stable/api/openvidu-browser/interfaces/StreamManagerEventMap.html#publisherStopSpeaking) objects)\n */\nexport class PublisherSpeakingEvent extends Event {\n    /**\n     * The client that started or stopped speaking\n     */\n    connection: Connection;\n\n    /**\n     * The streamId of the Stream affected by the speaking event\n     */\n    streamId: string;\n\n    /**\n     * @hidden\n     */\n    constructor(target: Session | StreamManager, type: string, connection: Connection, streamId: string) {\n        super(false, target, type);\n        this.type = type;\n        this.connection = connection;\n        this.streamId = streamId;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() {}\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}